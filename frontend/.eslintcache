[{"/Users/saru/dass/ass1/ytTut/frontend/src/App.jsx":"1","/Users/saru/dass/ass1/ytTut/frontend/src/reportWebVitals.js":"2","/Users/saru/dass/ass1/ytTut/frontend/src/components/Navbar.jsx":"3","/Users/saru/dass/ass1/ytTut/frontend/src/index.js":"4","/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/register.jsx":"5","/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/registerApplicant.jsx":"6","/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/registerRecruiter.jsx":"7","/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/signin.jsx":"8","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/addJob.jsx":"9","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recViewJobs.jsx":"10","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recJobCard.jsx":"11","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appViewJobs.jsx":"12","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appJobCard.jsx":"13","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appJobCardDetails.jsx":"14","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recJobCardDetails.jsx":"15","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recSeeJobApps.jsx":"16","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/ApplicationCard.jsx":"17","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appViewApplications.jsx":"18","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appApplicationCard.jsx":"19","/Users/saru/dass/ass1/ytTut/frontend/src/test.jsx":"20"},{"size":4109,"mtime":1611408969159,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1610622316329,"results":"23","hashOfConfig":"22"},{"size":2553,"mtime":1611318686990,"results":"24","hashOfConfig":"22"},{"size":478,"mtime":1610626775425,"results":"25","hashOfConfig":"22"},{"size":2823,"mtime":1610986518502,"results":"26","hashOfConfig":"22"},{"size":6400,"mtime":1611218298578,"results":"27","hashOfConfig":"22"},{"size":2011,"mtime":1610984486679,"results":"28","hashOfConfig":"22"},{"size":3258,"mtime":1610984733097,"results":"29","hashOfConfig":"22"},{"size":5418,"mtime":1610987885849,"results":"30","hashOfConfig":"22"},{"size":1622,"mtime":1611407904681,"results":"31","hashOfConfig":"22"},{"size":1277,"mtime":1611242709826,"results":"32","hashOfConfig":"22"},{"size":2408,"mtime":1611345328217,"results":"33","hashOfConfig":"22"},{"size":1980,"mtime":1611346252405,"results":"34","hashOfConfig":"22"},{"size":3002,"mtime":1611347798750,"results":"35","hashOfConfig":"22"},{"size":2395,"mtime":1611243583590,"results":"36","hashOfConfig":"22"},{"size":1396,"mtime":1611246585162,"results":"37","hashOfConfig":"22"},{"size":5096,"mtime":1611403376100,"results":"38","hashOfConfig":"22"},{"size":1194,"mtime":1611323914746,"results":"39","hashOfConfig":"22"},{"size":964,"mtime":1611324687190,"results":"40","hashOfConfig":"22"},{"size":512,"mtime":1611343121134,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lq6552",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/saru/dass/ass1/ytTut/frontend/src/App.jsx",[],"/Users/saru/dass/ass1/ytTut/frontend/src/reportWebVitals.js",[],["96","97"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/Navbar.jsx",["98","99"],"/Users/saru/dass/ass1/ytTut/frontend/src/index.js",[],["100","101"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/register.jsx",["102"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../App.css'\nconst axios = require('axios');\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: { type: 'applicant' },\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    e.preventDefault();\n    // console.log(e.target.id);\n    var tempData = this.state.userData;\n    tempData[e.target.id] = e.target.value;\n    this.setState({ userData: tempData });\n  }\n\n\n  onSubmit() {\n    //some validation\n    var subData = this.state.userData;\n    axios.post('http://localhost:5000/auth/register', subData)\n      .then(res => {\n        alert('please continue');\n        sessionStorage.setItem('userEmail', subData.email);\n        console.log(res);\n        if (subData.type === 'applicant')\n          window.location.replace('http://localhost:3000/registerApplicant/' + subData.email);\n        else\n          window.location.replace('http://localhost:3000/registerRecruiter/' + subData.email);\n      }).catch((err) => {\n        if (err) {\n          alert('error in data!')\n          this.setState({errors: err.response.data});\n        }\n      })\n\n  }\n  render() {\n    return (\n\n      <div>\n        <div className='form-group'>\n          <label>Name</label>\n          <input type='text' required id='name' onChange={this.onChange} />\n          <div className=\"text-danger\">{this.state.errors.name}</div>\n        </div>\n\n        <div className='form-group'>\n          <label>email</label>\n          <input type='text' required id='email' onChange={this.onChange} />\n          <div className=\"text-danger\">{this.state.errors.email}</div>\n\n        </div>\n\n        <div className='form-group'>\n          <label>password</label>\n          <input type='text' required id='password' onChange={this.onChange} />\n          <div className=\"text-danger\">{this.state.errors.password}</div>\n        </div>\n\n        <div className='form-group'>\n          <label>password_confirm</label>\n          <input type='text' required id='password_confirm' onChange={this.onChange} />\n          <div className=\"text-danger\">{this.state.errors.password_confirm}</div>\n\n        </div>\n\n        <div className='form-group'>\n          <label>userType</label>\n          <select className=\"form-control\" onChange={this.onChange} id='type' >\n            <option value=\"applicant\" selected>applicant</option>\n            <option value=\"recruiter\">recruiter</option>\n          </select>\n        </div>\n\n\n        <div className='submitButton'>\n          <input type='button' value='register' onClick={this.onSubmit} />\n        </div>\n        {JSON.stringify(this.state.userData)}\n      </div>\n\n\n    )\n  }\n}",["103","104"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/registerApplicant.jsx",["105","106","107"],"import React, { Component, useState } from 'react';\nimport { render } from 'react-dom';\nimport Creatable from 'react-select/creatable';\nimport '../../App.css'\nconst axios = require('axios');\n\nconst defaultLangs = [\n    { label: \"C\", value: \"C\" }, { label: \"C++\", value: \"C++\" }, { label: \"python\", value: \"python\" }, { label: \"java\", value: \"java\" }\n]\n\nclass ApplicantRegister extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            eduList: [{ instiName: '', startYear: '', endYear: '' }],\n            skills: [],\n            errors: {},\n            // image: null,\n            // resume: null,\n        }\n        this.onChangeEdu = this.onChangeEdu.bind(this);\n        this.onAddEdu = this.onAddEdu.bind(this);\n        this.onRemoveEdu = this.onRemoveEdu.bind(this);\n        this.onChangeSkills = this.onChangeSkills.bind(this);\n        // this.onChangeImage = this.onChangeImage.bind(this);\n        // this.onChangeResume = this.onChangeResume.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n\n    }\n    onChangeEdu(e, index) {\n        const list = [...this.state.eduList];\n        const { name, value } = e.target;\n        list[index][name] = value;\n        this.setState({ eduList: list })\n    }\n\n    onRemoveEdu(index) {\n        const tempList = [...this.state.eduList];\n        tempList.splice(index, 1);\n        this.setState({ eduList: tempList });\n    }\n\n    onAddEdu() {\n        this.setState({ eduList: [...this.state.eduList, { instiName: '', startYear: '', endYear: '' }] })\n    }\n\n    onChangeSkills(value) {\n        console.log(value);\n        this.setState({ skills: value });\n    }\n\n    // onChangeImage(e) {\n    //     var tempthis = this;\n    //     var reader = new FileReader();\n    //     reader.onload = function (uploadFile) {\n    //         tempthis.setState({ image: uploadFile.target.result })\n    //     }\n    //     reader.readAsDataURL(e.target.files[0]);\n    // }\n\n    // onChangeResume(e) {\n    //     var tempthis = this;\n    //     var reader = new FileReader();\n    //     reader.onload = function (uploadFile) {\n    //         tempthis.setState({ resume: uploadFile.target.result })\n    //     }\n    //     reader.readAsDataURL(e.target.files[0]);\n    // }\n\n    onSubmit() {\n        console.log(this.props.match.params.id)\n        console.log('submitted');\n        var skillList = []\n        this.state.skills.map((ob) => {\n            skillList = [...skillList, { lang: ob.value }]\n        })\n        console.log(skillList);\n        const subObject = {\n            email: this.props.match.params.id,\n            education: this.state.eduList,\n            skills: skillList,\n            // image: this.state.image,\n            // resume: this.state.resume,\n        }\n        console.log(subObject)\n        axios.post('http://localhost:5000/auth/register/applicant', subObject)\n            .then(res => {\n                alert(\"done! please continue to signin!\");\n                window.location.replace('http://localhost:3000/signin/');\n            }).catch(\n                err => {\n                    console.log(err.response);\n                    alert(`from backend: ${err}`);\n                    if (err)\n                        this.setState({ errors: err.response.data })\n                    return;\n                });\n    }\n\n    render() {\n        return (\n            <div className='react' style={{ marginLeft: '5%', marginRight: '20%' }}>\n                <h2>register for applicant</h2>\n                 list ur education pls:\n                {\n                    this.state.eduList.map((ed, index) => {\n                        return (\n                            <div key={index}>\n                                <input name='instiName'\n                                    onChange={(event) => this.onChangeEdu(event, index)}\n                                    value={ed.instiName} placeholder='instiName' />\n\n                                <input name='startYear'\n                                    type='text'\n                                    onChange={(event) => this.onChangeEdu(event, index)}\n                                    value={ed.startYear} placeholder='startYear' />\n\n                                <input name='endYear'\n                                    onChange={(event) => this.onChangeEdu(event, index)}\n                                    value={ed.endYear} placeholder='endYear' />\n                                {this.state.eduList.length !== 1 &&\n                                    <button onClick={() => this.onRemoveEdu(index)}>Remove</button>}\n                            </div>\n                        )\n                    })\n                }\n\n                {<button onClick={() => this.onAddEdu()}>Add</button>}\n                <div className=\"text-danger\">{this.state.errors.education}</div>\n\n                <div style={{ marginTop: 20 }}>{JSON.stringify(this.state.eduList)}</div>\n                <br />\n                <br />\n\n                list ur skills pls:\n                {\n                    <div>\n                        <label>skills</label>\n                        <Creatable onChange={(value) => this.onChangeSkills(value)}\n                            isMulti\n                            options={defaultLangs}\n                            value={this.state.skills}\n                        />\n                    </div>\n                }\n                <div className=\"text-danger\">{this.state.errors.skills}</div>\n\n                {/* <div className='form-group'>\n                    <label>image</label>\n                    <input type='file' required id='image' onChange={this.onChangeImage} />\n                    <div className=\"text-danger\">{this.state.errors.image}</div>\n                </div>\n                <div className='form-group'>\n                    <label>resume</label>\n                    <input type='file' required id='resume' onChange={this.onChangeResume} />\n                    <div className=\"text-danger\">{this.state.errors.resume}</div>\n                </div>\n\n                <div style={{ marginTop: 20 }}>{JSON.stringify(this.state.skills)}</div>\n                {this.state.image}\n                {this.state.resume} */}\n\n                <button onClick={() => { this.onSubmit() }} >submit</button>\n\n            </div>\n\n        )\n    }\n}\n\nexport default ApplicantRegister;","/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/registerRecruiter.jsx",["108"],"import React, { Component, useState } from 'react';\nimport '../../App.css'\nconst axios = require('axios');\n\nexport default class RecruiterRegister extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userData: {},\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n        e.preventDefault();\n        console.log(e.target.id);\n        var tempData = this.state.userData;\n        tempData[e.target.id] = e.target.value;\n        this.setState({ userData: tempData });\n    }\n\n\n    onSubmit(e) {\n        const email = this.props.match.params.id;\n\n        var subOb = this.state.userData;\n        subOb['email'] = email;\n        axios.post('http://localhost:5000/auth/register/recruiter', subOb)\n        .then( res => {\n            \n            alert('Done! please continue to signin!');\n            window.location.replace('http://localhost:3000/signin/');\n\n        }).catch(err=> {\n            console.log(err.response.data);\n            alert(`from backend ${err}`);\n            this.setState({errors: err.response.data});\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='form-group'>\n                    <label>contact number</label>\n                    <input type='text' required id='contactNumber' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.contactNumber}</div>\n                </div>\n                <div className='form-group'>\n                    <label>Bio</label>\n                    <input type='text' required id='Bio' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.Bio}</div>\n                </div>\n                <div className='submitButton'>\n                    <input type='button' value='register' onClick={this.onSubmit} />\n                </div>\n            </div>\n        )\n    }\n}","/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/signin.jsx",["109","110","111","112","113"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\n\nexport default class Signin extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userData: {},\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n        e.preventDefault();\n        // console.log(e.target.id);\n        var tempData = this.state.userData;\n        tempData[e.target.id] = e.target.value;\n        this.setState({ userData: tempData });\n    }\n\n    validate() {\n        let input = this.state.userData;\n        let errors = {}\n        let isValid = true;\n        if (!input[\"email\"]) {\n            isValid = false;\n            errors[\"email\"] = \"Please enter your email Address.\";\n        }\n\n        if (typeof input[\"email\"] !== \"undefined\") {\n\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n            if (!pattern.test(input[\"email\"])) {\n                isValid = false;\n                errors[\"email\"] = \"Please enter valid email address.\";\n            }\n        }\n        if (!input['password']) {\n            isValid = false;\n            errors['password'] = 'please enter password'\n        }\n        this.setState({\n            errors: errors\n        })\n        return isValid;\n    }\n\n    onSubmit(e) {\n        if (!this.validate()) {\n            alert('give proper data pls')\n            return\n        }\n        var subData = this.state.userData;\n        axios.post('http://localhost:5000/auth/signin', subData).then(res => {\n            console.log(res);\n            if (res.status == 200){\n                console.log('hi');\n                this.props.onLogIn(res.data.token);\n            }\n            // alert('please continue');\n            sessionStorage.setItem('userEmail', subData.email);\n            window.location.replace('http://localhost:3000/');\n        }).catch((err) => {\n            console.log(err.response.data);\n            alert(err.response.data.msg);\n        })\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h1>login/ signin</h1>\n\n                <div className='form-group'>\n                    <label>email</label>\n                    <input type='text' required id='email' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.email}</div>\n                </div>\n\n                <div className='form-group'>\n                    <label>password</label>\n                    <input type='text' required id='password' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.password}</div>\n                </div>\n\n                <div className='submitButton'>\n                    <input type='button' value='sign in' onClick={this.onSubmit} />\n                </div>\n\n            </div>\n        )\n    }\n\n}","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/addJob.jsx",["114","115"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport Creatable from 'react-select/creatable';\nimport { Redirect } from 'react-router-dom';\nimport DatePicker from 'react-date-picker'\n\nconst defaultLangs = [\n    { label: \"C\", value: \"C\" }, { label: \"C++\", value: \"C++\" }, { label: \"python\", value: \"python\" }, { label: \"java\", value: \"java\" }\n]\n\nexport default class AddJob extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            jobData: {\n                email: this.props.userEmail,\n                jobType: 'Full-time',\n                skills: []\n            },\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeSkills = this.onChangeSkills.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n    }\n\n\n    onChange(e) {\n        e.preventDefault();\n        // console.log(e.target.id);\n        var tempData = this.state.jobData;\n        tempData[e.target.id] = e.target.value;\n        this.setState({ jobData: tempData });\n    }\n    onSubmit(e) {\n        console.log(this.props.userEmail)\n        axios.post('http://localhost:5000/recruiter/addjob', this.state.jobData)\n            .then(res => {\n                console.log('success!');\n                alert('success');\n                window.location.replace('/')\n                console.log(this.state.jobData);\n            }).catch(err => {\n                console.log(err.response);\n                if (err) {\n                    alert('error in data!')\n                    this.setState({ errors: err.response.data });\n                    console.log(this.state.errors)\n                }\n            })\n    }\n\n    onChangeSkills(value) {\n        var tempJob = this.state.jobData;\n        var skillList = []\n        value.map((ob) => {\n            skillList = [...skillList, { lang: ob.value }]\n        })\n        tempJob['skills'] = skillList;\n        this.setState({ jobData: tempJob });\n    }\n\n    onChangeDate(e) {\n        console.log(e);\n        var tempJob = this.state.jobData;\n        tempJob['deadline'] = e;\n        this.setState({ jobData: tempJob });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>add job</h1>\n                <div className='form-group'>\n                    <label>job title</label>\n                    <input type='text' required id='title' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.title}</div>\n                </div>\n\n                <div className='form-group'>\n                    <label>job type</label>\n                    <select className=\"form-control\" onChange={this.onChange} id='jobType' >\n                        <option value=\"Full-time\" selected>Full-time</option>\n                        <option value=\"Part-time\">Part-time</option>\n                        <option value=\"Work-from-home\">Work from home</option>\n                    </select>\n                </div>\n\n                <div className='form-group'>\n                    <label>Salary</label>\n                    <input type='text' required id='salary' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.salary}</div>\n                </div>\n\n                <div className='form-group'>\n                    <label>Deadline</label>\n                    <DatePicker id='deadline' selected={this.state.date} onChange={this.onChangeDate} minDate={new Date()} value={this.state.jobData['deadline']} />\n                    <div className=\"text-danger\">{this.state.errors.deadline}</div>\n\n                </div>\n\n                <div className='form-group'>\n                    <label>max num of applications</label>\n                    <input type='text' required id='maxApplicants' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.maxApplicants}</div>\n                </div>\n\n                <div className='form-group'>\n                    <label>max num of positions</label>\n                    <input type='text' required id='maxPositions' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.maxPositions}</div>\n                </div>\n\n                <div className='form-group'>\n                    <label>Duration in months </label>\n                    <input type='text' required id='duration' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.duration}</div>\n                </div>\n\n                {\n                    <div>\n                        <label>skills required</label>\n                        <Creatable onChange={(value) => this.onChangeSkills(value)}\n                            isMulti\n                            options={defaultLangs}\n                            value={this.state.skills}\n                        />\n                        <div className=\"text-danger\">{this.state.errors.skills}</div>\n\n                    </div>\n                }\n\n                <button onClick={() => { this.onSubmit() }} >add job</button>\n\n                <div style={{ marginTop: 20 }}>{JSON.stringify(this.state.jobData)}</div>\n                <div style={{ marginTop: 20 }}>{JSON.stringify(this.state.errors)}</div>\n                {this.state.email}\n            </div>\n        )\n    }\n}",["116","117"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recViewJobs.jsx",[],"/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recJobCard.jsx",["118","119","120"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appViewJobs.jsx",["121"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport AppJobCard from './appJobCard'\n\n\nexport default class AppViewJobs extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: this.props.userEmail,\n            jobList: [],\n            Loading: true,\n            search: '',\n        }\n        this.onSubmitSearch = this.onSubmitSearch.bind(this);\n        this.onChangeSearch = this.onChangeSearch.bind(this);\n    }\n\n\n    componentDidMount() {\n        const data = { email: this.state.email }\n        axios.post('http://localhost:5000/applicant/viewjobs')\n            .then((res) => {\n                console.log(`${res.data}`);\n                this.setState({\n                    jobList: res.data,\n                    Loading: false\n                });\n            }).catch(err => console.log(err.response))\n    }\n\n    onChangeSearch(e) {\n        e.preventDefault();\n        this.setState({ search: e.target.value })\n    }\n\n    onSubmitSearch(e) {\n        e.preventDefault();\n        var req = { search: this.state.search };\n        axios.post('http://localhost:5000/applicant/viewjobs', req)\n            .then((res) => {\n                console.log(`${res.data}`);\n                this.setState({\n                    jobList: res.data,\n                    Loading: false\n                });\n            }).catch(err => console.log(err.response))\n\n    }\n\n    render() {\n        if (this.state.Loading)\n            return (<h1>...Loading..</h1>);\n\n        console.log(this.state.jobList)\n        var jobCards = this.state.jobList.map((job) =>\n            <React.Fragment>\n                <div className='card'>\n                    <AppJobCard job={job} />\n                </div>\n                <br />\n            </React.Fragment>\n        );\n        console.log();\n\n        return (\n            // {jobCards}\n            <div>\n                <div className='row'>\n                    <div className='col'>\n                        <input className=\"form-control\" onChange={this.onChangeSearch} placeholder=\"Search\" id=\"search\" type=\"text\" />\n                    </div>\n                    <div className='col'>\n                        <button onClick={this.onSubmitSearch}>search!</button>\n                    </div>\n                </div>\n                <h1>wow</h1>\n                {jobCards}\n            </div>\n        )\n    }\n}",["122","123"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appJobCard.jsx",["124","125","126","127"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appJobCardDetails.jsx",["128"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport Moment from 'react-moment'\n\nexport default class AppJobCardDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            job: {},\n            recruiter: {},\n            application: null,\n            SOP: '',\n            errors: {},\n            Loading: true,\n        }\n\n        this.onChangeSOP = this.onChangeSOP.bind(this);\n        this.onApply = this.onApply.bind(this);\n    }\n\n    componentDidMount() {\n        var req = { jobId: this.props.jobId };\n        console.log(req);\n        axios.post('http://localhost:5000/applicant/getJobDetails', req)\n            .then(res => {\n                console.log(res);\n                this.setState({ job: res.data, Loading: false });\n            }).catch(err => console.log(err));\n    }\n\n    onApply(e) {\n        //apply\n        var req = { job: this.state.job, email: this.props.userEmail, SOP: this.state.SOP };\n        console.log(req);\n\n        if (this.state.SOP == '') {\n            alert('SOP cant be null');\n            return;\n        }\n\n        axios.post('http://localhost:5000/applicant/applyForJob', req)\n            .then(res => {\n                console.log(res.data)\n                alert('successfully applied!')\n                window.location.replace('http://localhost:3000/');\n            })\n            .catch(err => {\n                console.log(err);\n                if (err['response'])\n                alert(err.response.data.msg);\n                else alert(err);\n            })\n    }\n\n    onChangeSOP(e) {\n        // e.preventDefault();\n        this.setState({ SOP: e.target.value })\n    }\n\n    render() {\nif (this.state.Loading) return(<h1>LOADING</h1>)\n\n        return (\n            <div>\n                <h1>appjobcarddetails</h1>\n                <h5>title: {this.state.job.jobTitle}</h5>\n                <p>\n                    jobType: {this.state.job.jobType} <br />\n                    salary: {this.state.job.salary} <br />\n                    maxApplicants: {this.state.job.maxApplicants} <br />\n                    maxPositions: {this.state.job.maxPositions} <br />\n                    duration: {this.state.job.duration} months <br />\n                    deadline: <Moment format=\"YYYY/MM/DD\">{this.state.job.deadline}</Moment> <br />\n                    recruiter name: {this.state.job.recruiter.user.name}<br />\n                    recruiter email: {this.state.job.recruiter.user.email}\n                </p>\n\n                <div className='form-group'>\n                    <label>SOP</label>\n                    <input type='text' required id='SOP' onChange={this.onChangeSOP} />\n                    <div className=\"text-danger\">{this.state.errors.SOP}</div>\n                </div>\n                <button onClick={this.onApply}>Apply!</button>\n                {JSON.stringify(this.state.job)}\n                {JSON.stringify(this.state.recruiterUser)}\n            </div>\n        )\n    }\n}","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recJobCardDetails.jsx",["129","130","131"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport axios from 'axios';\n\n\nexport default class RecJobCardDetails extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Loading: true,\n            job: {},\n            recruiter: {},\n            array: [\"600991e8ba70d87bc00a4ad5\", \"600998b25b52d380db7004d7\"],\n        }\n    }\n\n    componentDidMount() {\n        var req = { jobId: this.props.jobId }\n        axios.post('http://localhost:5000/recruiter/getJobDetails', req).then(res => {\n            this.setState({ job: res.data, Loading: false });\n            console.log(this.state.job.applications.length);\n            console.log(this.state.array)\n        }).catch(err => {\n            if (err['response']) {\n                alert(err.response.data)\n            }\n        })\n    }\n\n    render() {\n\n        if (this.state.Loading) return (<h1> LOADING</h1>)\n        return (\n            <div>\n                <h1>jobcardeets</h1>\n                {this.props.jobId}\n                <div className='card-body'>\n                    <h5>title: {this.state.job.jobTitle}</h5>\n                    <p>\n                        jobType: {this.state.job.jobType} <br />\n                        salary: {this.state.job.salary} <br />\n                        numApplications: {this.state.job.applications.length} <br />\n                        maxApplicants: {this.state.job.maxApplicants} <br />\n                        maxPositions: {this.state.job.maxPositions} <br />\n                        duration: {this.state.job.duration} months <br />\n                        deadline: <Moment format=\"YYYY/MM/DD\">{this.state.job.deadline}</Moment> \n                        <br />\n                        <br />\n                        <Link to={{\n                            pathname: '/recSeeJobApps',\n                            state: {\n                                jobId: this.state.job._id\n                            }\n                        }} >see details</Link>\n                        <br />\n                        <br />\n                        {JSON.stringify(this.state.job)}<br />\n                        {typeof (this.state.job.applications)}\n                    </p>\n                </div>\n            </div >\n        )\n    }\n}","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recSeeJobApps.jsx",["132","133","134","135","136"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport axios from 'axios';\nimport ApplicationCard from './ApplicationCard'\n\nexport default class recSeeJobApps extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            applicationList: null,\n            Loading: true,\n        }\n    }\n\n    componentDidMount() {\n        var req = { jobId: this.props.jobId };\n        axios.post('http://localhost:5000/recruiter/getAppsForjobs', req)\n            .then(res => {\n                console.log(res);\n                this.setState({ applicationList: res.data, Loading: false })\n            })\n            .catch(err => {\n                if (err['response']) alert(err.response.data.msg)\n            })\n    }\n\n    render() {\n        if (this.state.Loading) return (<h1>loading</h1>)\n\n        console.log(this.state.applicationList)\n        var applicationCards = this.state.applicationList.map(application => \n            <div className='card'>\n                <ApplicationCard application={application} />\n            </div>\n            )\n\n        return (\n            < div >\n                <h1>recSeeJobApps</h1>\n                {applicationCards}\n                {JSON.stringify(this.state.applicationList)}\n            </div >\n        )\n    }\n}","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/ApplicationCard.jsx",["137","138","139","140","141"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appViewApplications.jsx",[],"/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appApplicationCard.jsx",[],"/Users/saru/dass/ass1/ytTut/frontend/src/test.jsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":5,"column":27,"nodeType":"148","messageId":"149","endLine":5,"endColumn":33},{"ruleId":"146","severity":1,"message":"150","line":5,"column":35,"nodeType":"148","messageId":"149","endLine":5,"endColumn":39},{"ruleId":"142","replacedBy":"151"},{"ruleId":"144","replacedBy":"152"},{"ruleId":"146","severity":1,"message":"153","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":18},{"ruleId":"142","replacedBy":"154"},{"ruleId":"144","replacedBy":"155"},{"ruleId":"146","severity":1,"message":"156","line":1,"column":28,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"146","severity":1,"message":"157","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":77,"column":36,"nodeType":"160","messageId":"161","endLine":77,"endColumn":38},{"ruleId":"146","severity":1,"message":"156","line":1,"column":28,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"146","severity":1,"message":"147","line":2,"column":27,"nodeType":"148","messageId":"149","endLine":2,"endColumn":33},{"ruleId":"146","severity":1,"message":"162","line":2,"column":35,"nodeType":"148","messageId":"149","endLine":2,"endColumn":40},{"ruleId":"146","severity":1,"message":"150","line":2,"column":42,"nodeType":"148","messageId":"149","endLine":2,"endColumn":46},{"ruleId":"146","severity":1,"message":"153","line":2,"column":48,"nodeType":"148","messageId":"149","endLine":2,"endColumn":56},{"ruleId":"163","severity":1,"message":"164","line":61,"column":28,"nodeType":"165","messageId":"166","endLine":61,"endColumn":30},{"ruleId":"146","severity":1,"message":"153","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":57,"column":24,"nodeType":"160","messageId":"161","endLine":57,"endColumn":26},{"ruleId":"142","replacedBy":"167"},{"ruleId":"144","replacedBy":"168"},{"ruleId":"146","severity":1,"message":"147","line":2,"column":27,"nodeType":"148","messageId":"149","endLine":2,"endColumn":33},{"ruleId":"146","severity":1,"message":"162","line":2,"column":35,"nodeType":"148","messageId":"149","endLine":2,"endColumn":40},{"ruleId":"146","severity":1,"message":"153","line":2,"column":48,"nodeType":"148","messageId":"149","endLine":2,"endColumn":56},{"ruleId":"146","severity":1,"message":"169","line":22,"column":15,"nodeType":"148","messageId":"149","endLine":22,"endColumn":19},{"ruleId":"142","replacedBy":"170"},{"ruleId":"144","replacedBy":"171"},{"ruleId":"146","severity":1,"message":"147","line":2,"column":27,"nodeType":"148","messageId":"149","endLine":2,"endColumn":33},{"ruleId":"146","severity":1,"message":"162","line":2,"column":35,"nodeType":"148","messageId":"149","endLine":2,"endColumn":40},{"ruleId":"146","severity":1,"message":"153","line":2,"column":48,"nodeType":"148","messageId":"149","endLine":2,"endColumn":56},{"ruleId":"146","severity":1,"message":"172","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":14},{"ruleId":"163","severity":1,"message":"164","line":37,"column":28,"nodeType":"165","messageId":"166","endLine":37,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":2,"column":27,"nodeType":"148","messageId":"149","endLine":2,"endColumn":33},{"ruleId":"146","severity":1,"message":"162","line":2,"column":35,"nodeType":"148","messageId":"149","endLine":2,"endColumn":40},{"ruleId":"146","severity":1,"message":"153","line":2,"column":48,"nodeType":"148","messageId":"149","endLine":2,"endColumn":56},{"ruleId":"146","severity":1,"message":"147","line":2,"column":27,"nodeType":"148","messageId":"149","endLine":2,"endColumn":33},{"ruleId":"146","severity":1,"message":"162","line":2,"column":35,"nodeType":"148","messageId":"149","endLine":2,"endColumn":40},{"ruleId":"146","severity":1,"message":"150","line":2,"column":42,"nodeType":"148","messageId":"149","endLine":2,"endColumn":46},{"ruleId":"146","severity":1,"message":"153","line":2,"column":48,"nodeType":"148","messageId":"149","endLine":2,"endColumn":56},{"ruleId":"146","severity":1,"message":"172","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":2,"column":27,"nodeType":"148","messageId":"149","endLine":2,"endColumn":33},{"ruleId":"146","severity":1,"message":"162","line":2,"column":35,"nodeType":"148","messageId":"149","endLine":2,"endColumn":40},{"ruleId":"146","severity":1,"message":"150","line":2,"column":42,"nodeType":"148","messageId":"149","endLine":2,"endColumn":46},{"ruleId":"146","severity":1,"message":"153","line":2,"column":48,"nodeType":"148","messageId":"149","endLine":2,"endColumn":56},{"ruleId":"146","severity":1,"message":"172","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":14},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["173"],["174"],"'Redirect' is defined but never used.",["173"],["174"],"'useState' is defined but never used.","'render' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["173"],["174"],"'data' is assigned a value but never used.",["173"],["174"],"'Moment' is defined but never used.","no-global-assign","no-unsafe-negation"]