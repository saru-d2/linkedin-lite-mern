[{"/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/signin.jsx":"1","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recEditJob.jsx":"2","/Users/saru/dass/ass1/ytTut/frontend/src/reportWebVitals.js":"3","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recJobCardDetails.jsx":"4","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/ApplicationCard.jsx":"5","/Users/saru/dass/ass1/ytTut/frontend/src/components/Navbar.jsx":"6","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recSeeJobApps.jsx":"7","/Users/saru/dass/ass1/ytTut/frontend/src/App.jsx":"8","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/addJob.jsx":"9","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recViewAcc.jsx":"10","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/RecAppCard.jsx":"11","/Users/saru/dass/ass1/ytTut/frontend/src/index.js":"12","/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/register.jsx":"13","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appViewJobs.jsx":"14","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appJobCard.jsx":"15","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appJobCardDetails.jsx":"16","/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/registerRecruiter.jsx":"17","/Users/saru/dass/ass1/ytTut/frontend/src/test.jsx":"18","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appApplicationCard.jsx":"19","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appViewApplications.jsx":"20","/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/registerApplicant.jsx":"21","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recViewJobs.jsx":"22","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recEditProfile.jsx":"23","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appEditProfile.jsx":"24","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recJobCard.jsx":"25"},{"size":3262,"mtime":1611500498032,"results":"26","hashOfConfig":"27"},{"size":7388,"mtime":1611516688261,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1610622316329,"results":"29","hashOfConfig":"27"},{"size":2889,"mtime":1611499847189,"results":"30","hashOfConfig":"27"},{"size":5790,"mtime":1611520003244,"results":"31","hashOfConfig":"27"},{"size":2783,"mtime":1611600365416,"results":"32","hashOfConfig":"27"},{"size":5193,"mtime":1611520219354,"results":"33","hashOfConfig":"27"},{"size":5087,"mtime":1611599344376,"results":"34","hashOfConfig":"27"},{"size":5485,"mtime":1611556887943,"results":"35","hashOfConfig":"27"},{"size":4908,"mtime":1611577715912,"results":"36","hashOfConfig":"27"},{"size":3663,"mtime":1611601073580,"results":"37","hashOfConfig":"27"},{"size":478,"mtime":1610626775425,"results":"38","hashOfConfig":"27"},{"size":2831,"mtime":1611500443982,"results":"39","hashOfConfig":"27"},{"size":7824,"mtime":1611558579397,"results":"40","hashOfConfig":"27"},{"size":2369,"mtime":1611558717932,"results":"41","hashOfConfig":"27"},{"size":4994,"mtime":1611577374623,"results":"42","hashOfConfig":"27"},{"size":2165,"mtime":1611580245746,"results":"43","hashOfConfig":"27"},{"size":687,"mtime":1611411895742,"results":"44","hashOfConfig":"27"},{"size":2874,"mtime":1611588263003,"results":"45","hashOfConfig":"27"},{"size":1194,"mtime":1611586441292,"results":"46","hashOfConfig":"27"},{"size":6400,"mtime":1611218298578,"results":"47","hashOfConfig":"27"},{"size":1622,"mtime":1611407904681,"results":"48","hashOfConfig":"27"},{"size":3494,"mtime":1611605331556,"results":"49","hashOfConfig":"27"},{"size":5706,"mtime":1611605337057,"results":"50","hashOfConfig":"27"},{"size":1269,"mtime":1611421423022,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"lq6552",{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/signin.jsx",["117","118","119","120","121"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recEditJob.jsx",["122","123","124","125","126","127","128"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport axios from 'axios';\nimport Creatable from 'react-select/creatable';\nimport DatePicker from 'react-date-picker'\nimport { Row, Col } from 'react-bootstrap'\n\nconst defaultLangs = [\n    { label: \"C\", value: \"C\" }, { label: \"C++\", value: \"C++\" }, { label: \"python\", value: \"python\" }, { label: \"java\", value: \"java\" }\n]\n\nexport default class RecEditJob extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Loading: true,\n            job: {},\n            errors: {},\n            skillList: [],\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onChangeSkills = this.onChangeSkills.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n    }\n\n    componentDidMount() {\n        var req = { jobId: this.props.jobId };\n        console.log(req)\n        axios.post('http://localhost:5000/recruiter/getJobDetails', req).then(res => {\n            var skillTemp = []\n            res.data.skills.map(skill => {\n                skillTemp = [...skillTemp, { label: skill.lang, value: skill.lang }]\n            })\n            this.setState({ job: res.data, Loading: false });\n            this.setState({ skillList: skillTemp })\n            console.log(this.state.job.applications.length);\n            console.log(this.state.array)\n        }).catch(err => {\n            if (err['response']) {\n                alert(err.response.data)\n            }\n        })\n    }\n\n    onChangeDate(e) {\n        console.log(e);\n        var tempJob = this.state.job;\n        tempJob['deadline'] = e;\n        this.setState({ job: tempJob });\n    }\n\n    onChangeSkills(value) {\n        console.log(value)\n        var tempJob = this.state.job;\n        var skillList = []\n        if (value)\n            value.map((ob) => {\n                skillList = [...skillList, { lang: ob.value }]\n            })\n        tempJob['skills'] = skillList;\n        this.setState({ job: tempJob });\n        this.setState({ skillList: value })\n    }\n\n    onChange(e) {\n        e.preventDefault();\n        // console.log(e.target.id);\n        var tempData = this.state.job;\n        tempData[e.target.id] = e.target.value;\n        this.setState({ job: tempData });\n    }\n\n    onDelete(e) {\n        console.log('delete');\n        axios.post('http://localhost:5000/recruiter/deleteJob', this.state.job).then(res => {\n            console.log(res.data);\n            alert('succesfully deleted job, and all its applications')\n            window.location.replace('/')\n        }).catch(e => console.log(e));\n    }\n\n    onSubmit(e) {\n        console.log(this.props.userEmail)\n        axios.post('http://localhost:5000/recruiter/editJob', this.state.job)\n            .then(res => {\n                console.log('success!');\n                alert('success');\n                window.location.replace('/')\n                console.log(this.state.jobData);\n            }).catch(err => {\n                console.log(err.response);\n                if (err) {\n                    alert('error in data!')\n                    this.setState({ errors: err.response.data });\n                    console.log(this.state.errors)\n                }\n            })\n    }\n\n    render() {\n        if (this.state.Loading)\n            return (\n                <h1>Loading</h1>\n            )\n\n        return (\n            <div>\n                <h1>RecEditJob</h1>\n                <div>\n                    <h1>add job</h1>\n                    <div className='form-group'>\n                        <label>job title</label>\n                        <input type='text' required id='jobTitle' onChange={this.onChange} value={this.state.job.jobTitle} />\n                        <div className=\"text-danger\">{this.state.errors.title}</div>\n                    </div>\n\n                    <div className='form-group'>\n                        <label>job type</label>\n                        <select className=\"form-control\" onChange={this.onChange} id='jobType' value={this.state.job.jobType}>\n                            <option value=\"Full-time\" >Full-time</option>\n                            <option value=\"Part-time\">Part-time</option>\n                            <option value=\"Work-from-home\">Work from home</option>\n                        </select>\n                    </div>\n\n                    <div className='form-group'>\n                        <label>Salary</label>\n                        <input type='text' required id='salary' onChange={this.onChange} value={this.state.job.salary} />\n                        <div className=\"text-danger\">{this.state.errors.salary}</div>\n                    </div>\n\n                    <div className='form-group'>\n                        <label>Deadline</label>\n                        <DatePicker id='deadline' selected={this.state.date} onChange={this.onChangeDate} minDate={new Date()} value={this.state.job['deadline']} />\n                        <div className=\"text-danger\">{this.state.errors.deadline}</div>\n\n                    </div>\n\n                    <div className='form-group'>\n                        <label>max num of applications</label>\n                        <input type='text' required id='maxApplicants' onChange={this.onChange} value={this.state.job.maxApplicants} />\n                        <div className=\"text-danger\">{this.state.errors.maxApplicants}</div>\n                    </div>\n\n                    <div className='form-group'>\n                        <label>max num of positions</label>\n                        <input type='text' required id='maxPositions' onChange={this.onChange} value={this.state.job.maxPositions} />\n                        <div className=\"text-danger\">{this.state.errors.maxPositions}</div>\n                    </div>\n\n                    <div className='form-group'>\n                        <label>Duration in months </label>\n                        <input type='text' required id='duration' onChange={this.onChange} value={this.state.job.duration} />\n                        <div className=\"text-danger\">{this.state.errors.duration}</div>\n                    </div>\n\n                    {\n                        <div>\n                            <label>skills required</label>\n                            <Creatable value={this.state.skillList} onChange={(value) => this.onChangeSkills(value)}\n                                isMulti\n                                options={defaultLangs}\n                            />\n                            <div className=\"text-danger\">{this.state.errors.skills}</div>\n\n                        </div>\n                    }\n                    <br />\n                    <br />\n                    <Row>\n                        <Col>\n                            <button onClick={() => { this.onSubmit() }} >edit</button>\n                        </Col>\n                        <Col>\n                            <button onClick={this.onDelete}>delete</button>\n                        </Col>\n                    </Row>\n                </div>\n                {JSON.stringify(this.state.job)} <br />\n                {JSON.stringify(this.state.skillList)}\n            </div>\n        )\n    }\n}",["129","130"],"/Users/saru/dass/ass1/ytTut/frontend/src/reportWebVitals.js",[],"/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recJobCardDetails.jsx",["131","132","133"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport axios from 'axios';\nimport { Col, Row } from 'react-bootstrap';\n\n\n\nexport default class RecJobCardDetails extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Loading: true,\n            job: {},\n            recruiter: {},\n        }\n    }\n\n    componentDidMount() {\n        var req = { jobId: this.props.jobId }\n        axios.post('http://localhost:5000/recruiter/getJobDetails', req).then(res => {\n            this.setState({ job: res.data, Loading: false });\n            console.log(this.state.job.applications.length);\n            console.log(this.state.array)\n        }).catch(err => {\n            if (err['response']) {\n                alert(err.response.data)\n            }\n        })\n    }\n\n    render() {\n\n        if (this.state.Loading) return (<h1> LOADING</h1>)\n        return (\n            <div>\n                <h1>jobcardeets</h1>\n                {this.props.jobId}\n                <div className='card-body'>\n                    <h5>title: {this.state.job.jobTitle}</h5>\n                    <p>\n                        jobType: {this.state.job.jobType} <br />\n                        salary: {this.state.job.salary} <br />\n                        numApplications: {this.state.job.numApplicants} <br />\n                        maxApplicants: {this.state.job.maxApplicants} <br />\n                        maxPositions: {this.state.job.maxPositions} <br />\n                        duration: {this.state.job.duration} months <br />\n                        deadline: <Moment format=\"YYYY/MM/DD\">{this.state.job.deadline}</Moment>\n                        </p>\n                        <br />\n                        <br />\n                        <Row>\n                            <Col>\n                                <Link to={{\n                                    pathname: '/recSeeJobApps',\n                                    state: {\n                                        jobId: this.state.job._id\n                                    }\n                                }} >see applications</Link></Col>\n                            <Col>\n                                <Link to={{\n                                    pathname: '/recEditJob',\n                                    state: {\n                                        jobId: this.state.job._id\n                                    }\n                                }} >Edit job</Link>\n                            </Col>\n                        </Row>\n                        <br />\n                        <br />\n                        {JSON.stringify(this.state.job)}<br />\n                        {typeof (this.state.job.applications)}\n                </div>\n            </div >\n        )\n    }\n}",["134","135"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/ApplicationCard.jsx",["136","137","138","139","140"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport axios from 'axios';\n\nexport default class ApplicationCard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            Loading1: true,\n            Loading2: true,\n            job: {},\n        }\n\n        this.onAccept = this.onAccept.bind(this);\n        this.onReject = this.onReject.bind(this);\n        this.onShortlist = this.onShortlist.bind(this);\n    }\n\n    componentDidMount() {\n\n        var req = { jobId: this.props.application.job }\n        axios.post('http://localhost:5000/recruiter/getJobDetails', req).then(res => {\n            this.setState({\n                job: res.data,\n                Loading2: false,\n            })\n        })\n        axios.post()\n    }\n\n    onReject(e) {\n        e.preventDefault();\n        var req = { applicationId: this.props.application._id }\n        axios.post('http://localhost:5000/recruiter/rejectApplicant', req)\n            .then(res => {\n                alert('rejected');\n                window.location.reload();\n            })\n            .catch(err => {\n                if (err['response']['data']) {\n                    console.log(err.response.data);\n                } else {\n                    console.log('error')\n                }\n                alert('error');\n            })\n        console.log('reject')\n    }\n    onAccept(e) {\n        e.preventDefault();\n        var req = { applicationId: this.props.application._id }\n        axios.post('http://localhost:5000/recruiter/acceptApplicant', req)\n            .then(res => {\n                alert('accepted');\n                window.location.reload();\n            })\n            .catch(err => {\n                if (err['response']['data']) {\n                    console.log(err.response.data);\n                } else {\n                    console.log('error')\n                }\n                alert('error');\n            })\n        console.log('accept')\n    }\n    onShortlist(e) {\n        e.preventDefault();\n        var req = { applicationId: this.props.application._id }\n        axios.post('http://localhost:5000/recruiter/shortlistApplicant', req)\n            .then(res => {\n                alert('shortlisted');\n                window.location.reload();\n            })\n            .catch(err => {\n                if (err['response']['data']) {\n                    console.log(err.response.data);\n                } else {\n                    console.log('error')\n                }\n                alert('error');\n            })\n        console.log('shortlist')\n    }\n\n    render() {\n        if (this.state.Loading2 || this.state.Loading2) return (<h1>LOADING</h1>)\n\n        var eduList = this.props.application.applicant.education.map(edu =>\n            <div className='row'>\n                <div className='col'>{edu.instiName}</div>\n                <div className='col'>{edu.startYear}</div>\n                <div className='col'>{edu.endYear}</div>\n                <br />\n            </div>\n        )\n\n        var rating = 0\n        if (this.props.application.applicant.numRated > 0) rating = this.props.application.applicant.totalRating / this.props.application.applicant.numRated\n\n        var skillStr = ''\n        for (var i = 0; i < this.props.application.applicant.skills.length; i++) {\n            skillStr += ' ' + this.props.application.applicant.skills[i].lang + ' '\n        }\n\n        var buttons = null;\n        if (this.props.application.status === 'accepted')\n            buttons = <div>\n                <button style={{ backgroundColor: \"green\" }}> already acepted</button>\n            </div>\n        else if (this.state.job.numAccepted >= this.state.job.maxPositions) buttons = <div>\n            <button style={{ backgroundColor: \"red\" }}>full</button>\n        </div>\n        else if (this.props.application.status === 'applied') buttons = <div>\n            <div className='row'>\n                <div className='col'>\n                    <button onClick={this.onShortlist}>shortlist</button>\n                </div>\n                <div className='col'>\n                    <button onClick={this.onReject}>reject</button>\n                </div>\n            </div>\n        </div>\n\n        else if (this.props.application.status === 'shortlisted') buttons = <div>\n            <div className='row'>\n                <div className='col'>\n                    <button onClick={this.onAccept}>accept</button>\n                </div>\n                <div className='col'>\n                    <button onClick={this.onReject}>reject</button>\n                </div>\n            </div>\n        </div>\n\n        return (\n            <div style={{ 'marginLeft': '5%', }}>\n                <div className='row' >\n                    applicant name: {this.props.application.applicant.user.name}<br />\n                applicant email: {this.props.application.applicant.user.email} <br />\n                rating: {rating} <br />\n\n                application status: {this.props.application.status}\n                </div>\n                education:\n                <div className='row'>\n                    <div className='col'>institute</div>\n                    <div className='col'>start year</div>\n                    <div className='col'>end year</div>\n                </div>\n                {eduList}\n                <br />\n                <div className='row' style={{ 'marginLeft': '0.5%', }}>\n                    skills:\n                    {skillStr}\n                </div >\n                date: {this.props.application.date}\n\n                <br />\n                {buttons}\n\n\n                {JSON.stringify(this.state.job)}\n            </div>\n        )\n    }\n}",["141","142"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/Navbar.jsx",["143","144"],"import { Navbar, Nav } from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nexport default class NavBar extends Component {\n\n    constructor() {\n        super();\n        this.applicantElements = this.applicantElements.bind(this);\n        this.loggedOutElements = this.loggedOutElements.bind(this);\n        this.recruiterElements = this.recruiterElements.bind(this);\n    }\n\n\n    applicantElements() {\n        if (this.props.userType && this.props.userType === 'applicant')\n            return (\n                <React.Fragment>\n                    <Nav.Link href='/appViewJobs'>view jobs</Nav.Link>\n                    <Nav.Link href='/appViewApplications'>see your applications</Nav.Link>\n                    <Nav.Link href='/appEditProfile'>edit profile</Nav.Link>\n                    <Nav.Link >applicant</Nav.Link>\n                    <Nav.Link href='/logout'>logout</Nav.Link>\n                </React.Fragment>\n            )\n    }\n\n    recruiterElements() {\n        if (this.props.userType && this.props.userType === 'recruiter')\n            return (\n                <React.Fragment>\n                    <Nav.Link href='/addJob'>add job</Nav.Link>\n                    <Nav.Link href='/recViewJobs'>see jobs u posted</Nav.Link>\n                    <Nav.Link href='/recViewAcc'>see accepted applicants</Nav.Link>\n                    <Nav.Link href='/recEditProfile'>edit profile</Nav.Link>\n                    <Nav.Link href='/'>recruiter</Nav.Link>\n                    <Nav.Link href='/logout'>logout</Nav.Link>\n                </React.Fragment>\n            )\n    }\n\n    loggedOutElements() {\n        if (this.props.isLoggedIn === false) {\n            console.log('bugger')\n            return (\n                <React.Fragment>\n                    <Nav.Link href='/register'>register</Nav.Link>\n                    <Nav.Link href='/signin'>sign in</Nav.Link>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n\n        return (\n            <div className='navBar'>\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                    <Navbar.Brand href='/' onClick={console.log(this.props.userType)}>Linkedin wannabe</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className='mr-auto'>\n                            {this.loggedOutElements()}\n                            {this.applicantElements()}\n                            {this.recruiterElements()}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\n",["145","146"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recSeeJobApps.jsx",["147","148","149","150","151","152","153","154"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport axios from 'axios';\nimport { Col, Row } from 'react-bootstrap';\nimport ApplicationCard from './ApplicationCard'\n\nexport default class recSeeJobApps extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            applicationList: null,\n            Loading: true,\n        }\n\n        this.onSortRating = this.onSortRating.bind(this);\n        this.onSortName = this.onSortName.bind(this);\n        this.onSortDate = this.onSortDate.bind(this);\n    }\n\n    componentDidMount() {\n        var req = { jobId: this.props.jobId };\n        axios.post('http://localhost:5000/recruiter/getAppsForjobs', req)\n            .then(res => {\n                console.log(res);\n                this.setState({ applicationList: res.data, Loading: false })\n            })\n            .catch(err => {\n                if (err['response']) alert(err.response.data.msg)\n            })\n    }\n\n    onSortRating(e) {\n        e.preventDefault();\n        console.log(e.target.getAttribute('polarity'));\n        const apps = this.state.applicationList;\n        apps.sort(function (a, b) {\n            var aRat = 0\n            var bRat = 0\n            if (!a.applicant['totalRating']) a.applicant['totalRating'] = 0;\n            if (!b.applicant['totalRating']) b.applicant['totalRating'] = 0;\n            if (a.applicant['numRated'] > 0) aRat = a.applicant['totalRating'] / a.applicant['numRated']\n            if (b.applicant['numRated'] > 0) bRat = b.applicant['totalRating'] / b.applicant['numRated']\n\n            return (e.target.getAttribute('polarity')) * (aRat - bRat)\n        })\n        this.setState({ applicationList: apps })\n    }\n\n    onSortName(e) {\n        e.preventDefault();\n        console.log(e.target.getAttribute('polarity'));\n        const apps = this.state.applicationList;\n\n        apps.sort(function (a, b) {\n            console.log(a.applicant.user.name)\n            console.log(b.applicant.user.name)\n            if (e.target.getAttribute('polarity') == 1)\n                return a.applicant.user.name.localeCompare(b.applicant.user.name)\n            else\n                return b.applicant.user.name.localeCompare(a.applicant.user.name)\n        })\n        this.setState({ applicationList: apps })\n    }\n\n    onSortDate(e) {\n        e.preventDefault();\n        console.log(e.target.getAttribute('polarity'));\n        const apps = this.state.applicationList;\n\n        apps.sort(function (a, b) {\n            console.log(a.date)\n            console.log(b.date)\n            if (e.target.getAttribute('polarity') == 1)\n                return new Date(a.date).getTime() - new Date(b.date).getTime()\n            else\n                return new Date(b.date).getTime() - new Date(a.date).getTime()\n        })\n        this.setState({ applicationList: apps })\n    }\n\n    render() {\n        if (this.state.Loading) return (<h1>loading</h1>)\n\n        console.log(this.state.applicationList)\n        if (this.state.applicationList.length !== 0)\n            var applicationCards = this.state.applicationList.map(application =>\n                <div className='card'>\n                    <ApplicationCard application={application} />\n                </div>\n            )\n        else {\n            var applicationCards = <h1>No applications yet</h1>\n        }\n\n        return (\n            < div >\n                <h1>recSeeJobApps</h1>\n                <Row>\n                    <Col >\n                        sort-by-name\n                    </Col>\n                    <Col >\n                        <Row>\n                            <button id='name' polarity={1} onClick={this.onSortName}>asc</button>\n                        </Row>\n                        <Row>\n                            <button id='salary' polarity={-1} onClick={this.onSortName}>desc\n                            </button>\n                        </Row>\n                    </Col>\n                    <Col >\n                        sort-by-rating\n                    </Col>\n                    <Col >\n                        <Row>\n                            <button id='rating' polarity={1} onClick={this.onSortRating} >asc</button>\n                        </Row>\n                        <Row>\n                            <button id='rating' polarity={-1} onClick={this.onSortRating} >desc\n                                </button>\n                        </Row>\n                    </Col>\n                    <Col >\n                        sort-by-date\n                    </Col>\n                    <Col >\n                        <Row>\n                            <button id='date' polarity={1} onClick={this.onSortDate}>asc</button>\n                        </Row>\n                        <Row>\n                            <button id='date' polarity={-1} onClick={this.onSortDate}>desc\n                            </button>\n                        </Row>\n                    </Col>\n                </Row>\n                {applicationCards}\n                {JSON.stringify(this.state.applicationList)}\n            </div >\n        )\n    }\n}","/Users/saru/dass/ass1/ytTut/frontend/src/App.jsx",["155"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/addJob.jsx",["156","157"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport Creatable from 'react-select/creatable';\nimport DatePicker from 'react-date-picker'\n\nconst defaultLangs = [\n    { label: \"C\", value: \"C\" }, { label: \"C++\", value: \"C++\" }, { label: \"python\", value: \"python\" }, { label: \"java\", value: \"java\" }\n]\n\nexport default class AddJob extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            jobData: {\n                email: this.props.userEmail,\n                jobType: 'Full-time',\n                skills: []\n            },\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeSkills = this.onChangeSkills.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n    }\n\n\n    onChange(e) {\n        e.preventDefault();\n        // console.log(e.target.id);\n        var tempData = this.state.jobData;\n        tempData[e.target.id] = e.target.value;\n        this.setState({ jobData: tempData });\n    }\n    onSubmit(e) {\n        console.log(this.props.userEmail)\n        axios.post('http://localhost:5000/recruiter/addjob', this.state.jobData)\n            .then(res => {\n                console.log('success!');\n                alert('success');\n                window.location.replace('/')\n                console.log(this.state.jobData);\n            }).catch(err => {\n                console.log(err.response);\n                if (err) {\n                    alert('error in data!')\n                    this.setState({ errors: err.response.data });\n                    console.log(this.state.errors)\n                }\n            })\n    }\n\n    onChangeSkills(value) {\n        console.log(value)\n        var tempJob = this.state.jobData;\n        var skillList = []\n        value.map((ob) => {\n            skillList = [...skillList, { lang: ob.value }]\n        })\n        tempJob['skills'] = skillList;\n        this.setState({ jobData: tempJob });\n    }\n\n    onChangeDate(e) {\n        console.log(e);\n        var tempJob = this.state.jobData;\n        tempJob['deadline'] = e;\n        this.setState({ jobData: tempJob });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>add job</h1>\n                <div className='form-group'>\n                    <label>job title</label>\n                    <input type='text' required id='title' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.title}</div>\n                </div>\n\n                <div className='form-group'>\n                    <label>job type</label>\n                    <select className=\"form-control\" onChange={this.onChange} id='jobType' >\n                        <option value=\"Full-time\" selected>Full-time</option>\n                        <option value=\"Part-time\">Part-time</option>\n                        <option value=\"Work-from-home\">Work from home</option>\n                    </select>\n                </div>\n\n                <div className='form-group'>\n                    <label>Salary</label>\n                    <input type='text' required id='salary' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.salary}</div>\n                </div>\n\n                <div className='form-group'>\n                    <label>Deadline</label>\n                    <DatePicker id='deadline' selected={this.state.date} onChange={this.onChangeDate} minDate={new Date()} value={this.state.jobData['deadline']} />\n                    <div className=\"text-danger\">{this.state.errors.deadline}</div>\n\n                </div>\n\n                <div className='form-group'>\n                    <label>max num of applications</label>\n                    <input type='text' required id='maxApplicants' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.maxApplicants}</div>\n                </div>\n\n                <div className='form-group'>\n                    <label>max num of positions</label>\n                    <input type='text' required id='maxPositions' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.maxPositions}</div>\n                </div>\n\n                <div className='form-group'>\n                    <label>Duration in months </label>\n                    <input type='text' required id='duration' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.duration}</div>\n                </div>\n\n                {\n                    <div>\n                        <label>skills required</label>\n                        <Creatable onChange={(value) => this.onChangeSkills(value)}\n                            isMulti\n                            options={defaultLangs}\n                            value={this.state.skills}\n                        />\n                        <div className=\"text-danger\">{this.state.errors.skills}</div>\n\n                    </div>\n                }\n\n                <button onClick={() => { this.onSubmit() }} >add job</button>\n\n                <div style={{ marginTop: 20 }}>{JSON.stringify(this.state.jobData)}</div>\n                <div style={{ marginTop: 20 }}>{JSON.stringify(this.state.errors)}</div>\n                <br/>\n                {JSON.stringify(this.state.skills)}\n\n            </div>\n        )\n    }\n}","/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recViewAcc.jsx",["158","159","160"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/RecAppCard.jsx",["161","162","163","164","165"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport axios from 'axios';\n\nexport default class RecAppCard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rating: null,\n        }\n\n        this.onRate = this.onRate.bind(this)\n        this.onChangeRating = this.onChangeRating.bind(this);\n    }\n\n    onRate() {\n        if (!this.state.rating || this.state.rating > 5 || this.state.rating < 1) { alert('check the value of rating'); return; }\n        var req = { application: this.props.application, rating: this.state.rating }\n        console.log(req);\n        axios.post('http://localhost:5000/recruiter/rateApplicant', req).then(res => {\n            console.log(res);\n            alert('done!');\n            this.setState({ rating: req.rating });\n            window.location.reload(false);\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    onChangeRating(e) {\n        e.preventDefault();\n        this.setState({ rating: e.target.value });\n    }\n\n    render() {\n        // if (this.state.Loading2 || this.state.Loading2) return (<h1>LOADING</h1>)\n\n        var eduList = this.props.application.applicant.education.map(edu =>\n            <div className='row'>\n                <div className='col'>{edu.instiName}</div>\n                <div className='col'>{edu.startYear}</div>\n                <div className='col'>{edu.endYear}</div>\n                <br />\n            </div>\n        )\n\n        var rating = 0\n        if (this.props.application.applicant.numRated > 0) rating = this.props.application.applicant.totalRating / this.props.application.applicant.numRated\n\n        var skillStr = ''\n        for (var i = 0; i < this.props.application.applicant.skills.length; i++) {\n            skillStr += ' ' + this.props.application.applicant.skills[i].lang + ' '\n        }\n\n        var RateButton = <button style={{ backgroundColor: 'red' }}> already Rated </button>\n        if (!this.props.application.appRated) {\n            console.log('not rated')\n            RateButton = <div>\n                <input type='number' min='1' max='5' onChange={this.onChangeRating} />\n                <button value={this.state.rating} onClick={this.onRate} style={{ backgroundColor: 'green' }} onChange={this.onChangeRating}> rate! </button>\n            </div>\n        }\n        return (\n            <div style={{ 'marginLeft': '5%', }}>\n                <div className='row' >\n                    job: {this.props.application.job.jobTitle} <br />\n                    applicant name: {this.props.application.applicant.user.name}<br />\n                applicant email: {this.props.application.applicant.user.email} <br />\n                rating: {rating} <br />\n\n                application status: {this.props.application.status}\n                </div>\n                education:\n                <div className='row'>\n                    <div className='col'>institute</div>\n                    <div className='col'>start year</div>\n                    <div className='col'>end year</div>\n                </div>\n                {eduList}\n                <br />\n                <div className='row' style={{ 'marginLeft': '0.5%', }}>\n                    skills:\n                    {skillStr}\n                </div >\n                date of joining: {this.props.application.accDate}\n\n                <br />\n                {RateButton} <br />\n                {JSON.stringify(this.state.rating)}\n\n                {JSON.stringify(this.props.application)}\n            </div>\n        )\n    }\n}","/Users/saru/dass/ass1/ytTut/frontend/src/index.js",[],["166","167"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/register.jsx",["168"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../App.css'\nconst axios = require('axios');\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: { type: 'applicant' },\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    e.preventDefault();\n    // console.log(e.target.id);\n    var tempData = this.state.userData;\n    tempData[e.target.id] = e.target.value;\n    this.setState({ userData: tempData });\n  }\n\n\n  onSubmit() {\n    //some validation\n    var subData = this.state.userData;\n    axios.post('http://localhost:5000/auth/register', subData)\n      .then(res => {\n        alert('please continue');\n        sessionStorage.setItem('userEmail', subData.email);\n        console.log(res);\n        if (subData.type === 'applicant')\n          window.location.replace('http://localhost:3000/registerApplicant/' + subData.email);\n        else\n          window.location.replace('http://localhost:3000/registerRecruiter/' + subData.email);\n      }).catch((err) => {\n        if (err) {\n          alert('error in data!')\n          this.setState({errors: err.response.data});\n        }\n      })\n\n  }\n  render() {\n    return (\n\n      <div>\n        <div className='form-group'>\n          <label>Name</label>\n          <input type='text' required id='name' onChange={this.onChange} />\n          <div className=\"text-danger\">{this.state.errors.name}</div>\n        </div>\n\n        <div className='form-group'>\n          <label>email</label>\n          <input type='text' required id='email' onChange={this.onChange} />\n          <div className=\"text-danger\">{this.state.errors.email}</div>\n\n        </div>\n\n        <div className='form-group'>\n          <label>password</label>\n          <input type='password' required id='password' onChange={this.onChange} />\n          <div className=\"text-danger\">{this.state.errors.password}</div>\n        </div>\n\n        <div className='form-group'>\n          <label>password_confirm</label>\n          <input type='password' required id='password_confirm' onChange={this.onChange} />\n          <div className=\"text-danger\">{this.state.errors.password_confirm}</div>\n\n        </div>\n\n        <div className='form-group'>\n          <label>userType</label>\n          <select className=\"form-control\" onChange={this.onChange} id='type' >\n            <option value=\"applicant\" selected>applicant</option>\n            <option value=\"recruiter\">recruiter</option>\n          </select>\n        </div>\n\n\n        <div className='submitButton'>\n          <input type='button' value='register' onClick={this.onSubmit} />\n        </div>\n        {JSON.stringify(this.state.userData)}\n      </div>\n\n\n    )\n  }\n}","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appViewJobs.jsx",["169","170","171","172","173","174"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport AppJobCard from './appJobCard'\nimport { Col, Row } from 'react-bootstrap';\n\n\nexport default class AppViewJobs extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: this.props.userEmail,\n            jobList: [],\n            Loading1: true,\n            Loading2: true,\n            search: '',\n            filter: {\n                jobType: 'select',\n                minSalary: -1,\n                maxSalary: 1000000000,\n                maxDuration: 7,\n            },\n            isAccepted: {}\n        }\n        this.onSubmitSearch = this.onSubmitSearch.bind(this);\n        this.onChangeSearch = this.onChangeSearch.bind(this);\n        this.onChangeFilter = this.onChangeFilter.bind(this);\n        this.onSortRating = this.onSortRating.bind(this);\n        this.onSortRating = this.onSortRating.bind(this);\n        this.onSortSalary = this.onSortSalary.bind(this);\n    }\n\n\n    componentDidMount() {\n        axios.post('http://localhost:5000/applicant/viewjobs')\n            .then((res) => {\n                console.log(`${res.data}`);\n                this.setState({\n                    jobList: res.data,\n                    Loading1: false\n                });\n            }).catch(err => console.log(err.response))\n        axios.post('http://localhost:5000/applicant/getAcceptedApp').then(res => {\n            this.setState({\n                isAccepted: res.data,\n                Loading2: false\n            })\n        }).catch(e => {\n            console.log(e);\n            alert(e);\n        })\n    }\n\n    onChangeFilter(e) {\n\n        var tempFil = this.state.filter\n        tempFil[e.target.id] = e.target.value;\n        this.setState({\n            filter: tempFil\n        });\n    }\n\n    onChangeSearch(e) {\n        e.preventDefault();\n        this.setState({ search: e.target.value })\n    }\n\n    onSubmitSearch(e) {\n        e.preventDefault();\n        var req = { search: this.state.search };\n        axios.post('http://localhost:5000/applicant/viewjobs', req)\n            .then((res) => {\n                console.log(`${res.data}`);\n                this.setState({\n                    jobList: res.data,\n                    Loading: false\n                });\n            }).catch(err => console.log(err.response))\n\n    }\n\n\n\n    onSortRating(e) {\n        e.preventDefault();\n        console.log(e.target.getAttribute('polarity'));\n        const jobs = this.state.jobList;\n        jobs.sort(function (a, b) {\n            var aRat = 0\n            var bRat = 0\n            if (!a['totalRating']) a['totalRating'] = 0;\n            if (!b['totalRating']) b['totalRating'] = 0;\n            if (a['numRated'] > 0) aRat = a['totalRating'] / a['numRated']\n            if (b['numRated'] > 0) bRat = b['totalRating'] / b['numRated']\n\n            return (e.target.getAttribute('polarity')) * (aRat - bRat)\n        })\n        this.setState({ jobList: jobs })\n    }\n\n    onSortSalary(e) {\n        e.preventDefault();\n        console.log(e.target.getAttribute('polarity'));\n        const jobs = this.state.jobList;\n        jobs.sort(function (a, b) {\n            return e.target.getAttribute('polarity') * (a['salary'] - b['salary'])\n        })\n        this.setState({ jobList: jobs })\n    }\n\n    render() {\n\n\n        if (this.state.Loading1 || this.state.Loading2)\n            return (<h1>...Loading..</h1>);\n\n        console.log(this.state.jobList)\n\n        var filterJobs = data => {\n            //put some bs here pls\n            if (data['salary'] < this.state.filter.minSalary || data['salary'] > this.state.filter.salary) return false;\n            if (data['duration'] >= this.state.filter.maxDuration) return false;\n            if (this.state.filter.jobType != 'select' && data['jobType'] != this.state.filter.jobType) return false;\n\n            return true;\n        }\n\n        var jobCards = this.state.jobList.filter(data => (data['salary'] >= this.state.filter.minSalary && data['salary'] <= this.state.filter.maxSalary) && data['duration'] < this.state.filter.maxDuration && ((this.state.filter.jobType != 'select' && data['jobType'] == this.state.filter.jobType) || (this.state.filter.jobType == 'select'))).map((job) =>\n            <React.Fragment>\n                <div className='card'>\n                    <AppJobCard job={job} isAccepted={this.state.isAccepted} />\n                </div>\n                <br />\n            </React.Fragment>\n        );\n        console.log();\n\n        return (\n            <div>\n                <Row>\n                    <Col lg={6}>\n                        <input className=\"form-control\" onChange={this.onChangeSearch} placeholder=\"Search\" id=\"search\" type=\"text\" style={{ width: '100%' }} />\n                    </Col>\n                    <Col lg={1}>\n                        <button onClick={this.onSubmitSearch}>search!</button>\n                    </Col>\n                    <Col lg={1.5}>\n                        sort-by-salary\n                    </Col>\n                    <Col lg={1}>\n                        <Row>\n                            <button id='salary' polarity={1} onClick={this.onSortSalary}>asc</button>\n                        </Row>\n                        <Row>\n                            <button id='salary' polarity={-1} onClick={this.onSortSalary}>desc\n                            </button>\n                        </Row>\n                    </Col>\n                    <Col lg={1.5}>\n                        sort-by-rating\n                    </Col>\n                    <Col lg={1}>\n                        <Row>\n                            <button id='rating' polarity={1} onClick={this.onSortRating} >asc</button>\n                        </Row>\n                        <Row>\n                            <button id='rating' polarity={-1} onClick={this.onSortRating} >desc\n                                </button>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row>\n\n                    <Col lg={1}>\n                        filters:\n                    </Col>\n\n                    <Col lg={1}>\n                        job type:\n                    </Col>\n                    <Col lg={3}>\n                        <select className=\"form-control\" onChange={this.onChangeFilter} id='jobType' >\n                            <option value=\"select\" selected>select\n                            </option>\n                            <option value=\"Full-time\" >Full-time</option>\n                            <option value=\"Part-time\">Part-time</option>\n                            <option value=\"Work-from-home\">Work from home</option>\n                        </select>\n                    </Col>\n                    <Col lg={1}>\n                        salary range:\n                    </Col>\n                    <Col lg={1}>\n                        <Row>\n                            <input type='number' id='minSalary' value={this.state.filter.minSalary} style={{ width: '100%' }} onChange={this.onChangeFilter} />\n                        </Row>\n                        <Row>\n                            <input type='number' id='maxSalary' value={this.state.filter.maxSalary} style={{ width: '100%' }} onChange={this.onChangeFilter} />\n                        </Row>\n                    </Col>\n                    <Col lg={1.5}>\n                        max Duration:\n                    </Col>\n                    <Col lg={1}>\n                        <input type='number' id='maxDuration' value={this.state.filter.maxDuration} style={{ width: '100%' }} onChange={this.onChangeFilter} />\n                    </Col>\n                </Row>\n                {JSON.stringify(this.state.filter)}\n                <h1>wow</h1>\n                {jobCards}\n            </div>\n        )\n    }\n}","/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appJobCard.jsx",["175","176","177","178","179"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appJobCardDetails.jsx",[],"/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/registerRecruiter.jsx",["180"],"import React, { Component, useState } from 'react';\nimport '../../App.css'\nconst axios = require('axios');\n\nexport default class RecruiterRegister extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userData: {},\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n        e.preventDefault();\n        console.log(e.target.id);\n        var tempData = this.state.userData;\n        tempData[e.target.id] = e.target.value;\n        this.setState({ userData: tempData });\n    }\n\n\n    onSubmit(e) {\n        const email = this.props.match.params.id;\n\n        var subOb = this.state.userData;\n        subOb['email'] = email;\n        axios.post('http://localhost:5000/auth/register/recruiter', subOb)\n            .then(res => {\n\n                alert('Done! please continue to signin!');\n                window.location.replace('http://localhost:3000/signin/');\n\n            }).catch(err => {\n                console.log(err.response.data);\n                alert(`from backend ${err}`);\n                this.setState({ errors: err.response.data });\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='form-group'>\n                    <label>contact number</label>\n                    <input type='text' required id='contactNumber' onChange={this.onChange} />\n                    <div className=\"text-danger\">{this.state.errors.contactNumber}</div>\n                </div>\n                <div className='form-group'>\n                    <label>Bio</label>\n                    <textarea\n                        className=\"form-control\"\n                        id=\"Bio\"\n                        rows=\"5\"\n                        onChange={this.onChange}\n                    />\n                    <div className=\"text-danger\">{this.state.errors.Bio}</div>\n                </div>\n                <div className='submitButton'>\n                    <input type='button' value='register' onClick={this.onSubmit} />\n                </div>\n            </div>\n        )\n    }\n}","/Users/saru/dass/ass1/ytTut/frontend/src/test.jsx",[],"/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appApplicationCard.jsx",[],"/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appViewApplications.jsx",[],"/Users/saru/dass/ass1/ytTut/frontend/src/components/auth/registerApplicant.jsx",["181","182","183"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recViewJobs.jsx",[],"/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recEditProfile.jsx",[],"/Users/saru/dass/ass1/ytTut/frontend/src/components/applicant/appEditProfile.jsx",["184","185","186","187"],"/Users/saru/dass/ass1/ytTut/frontend/src/components/recruiter/recJobCard.jsx",["188","189","190"],{"ruleId":"191","severity":1,"message":"192","line":2,"column":27,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"195","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"196","line":2,"column":42,"nodeType":"193","messageId":"194","endLine":2,"endColumn":46},{"ruleId":"191","severity":1,"message":"197","line":2,"column":48,"nodeType":"193","messageId":"194","endLine":2,"endColumn":56},{"ruleId":"198","severity":1,"message":"199","line":61,"column":28,"nodeType":"200","messageId":"201","endLine":61,"endColumn":30},{"ruleId":"191","severity":1,"message":"192","line":2,"column":27,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"195","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"196","line":2,"column":42,"nodeType":"193","messageId":"194","endLine":2,"endColumn":46},{"ruleId":"191","severity":1,"message":"197","line":2,"column":48,"nodeType":"193","messageId":"194","endLine":2,"endColumn":56},{"ruleId":"191","severity":1,"message":"202","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":14},{"ruleId":"203","severity":1,"message":"204","line":35,"column":39,"nodeType":"205","messageId":"206","endLine":35,"endColumn":41},{"ruleId":"203","severity":1,"message":"204","line":61,"column":28,"nodeType":"205","messageId":"206","endLine":61,"endColumn":30},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"191","severity":1,"message":"192","line":2,"column":27,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"195","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"197","line":2,"column":48,"nodeType":"193","messageId":"194","endLine":2,"endColumn":56},{"ruleId":"207","replacedBy":"211"},{"ruleId":"209","replacedBy":"212"},{"ruleId":"191","severity":1,"message":"192","line":2,"column":27,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"195","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"196","line":2,"column":42,"nodeType":"193","messageId":"194","endLine":2,"endColumn":46},{"ruleId":"191","severity":1,"message":"197","line":2,"column":48,"nodeType":"193","messageId":"194","endLine":2,"endColumn":56},{"ruleId":"191","severity":1,"message":"202","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":14},{"ruleId":"207","replacedBy":"213"},{"ruleId":"209","replacedBy":"214"},{"ruleId":"191","severity":1,"message":"192","line":5,"column":27,"nodeType":"193","messageId":"194","endLine":5,"endColumn":33},{"ruleId":"191","severity":1,"message":"196","line":5,"column":35,"nodeType":"193","messageId":"194","endLine":5,"endColumn":39},{"ruleId":"207","replacedBy":"215"},{"ruleId":"209","replacedBy":"216"},{"ruleId":"191","severity":1,"message":"192","line":2,"column":27,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"195","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"196","line":2,"column":42,"nodeType":"193","messageId":"194","endLine":2,"endColumn":46},{"ruleId":"191","severity":1,"message":"197","line":2,"column":48,"nodeType":"193","messageId":"194","endLine":2,"endColumn":56},{"ruleId":"191","severity":1,"message":"202","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":14},{"ruleId":"198","severity":1,"message":"199","line":58,"column":51,"nodeType":"200","messageId":"201","endLine":58,"endColumn":53},{"ruleId":"198","severity":1,"message":"199","line":74,"column":51,"nodeType":"200","messageId":"201","endLine":74,"endColumn":53},{"ruleId":"217","severity":1,"message":"218","line":93,"column":17,"nodeType":"193","messageId":"219","endLine":93,"endColumn":33},{"ruleId":null,"fatal":true,"severity":2,"message":"220","line":21,"column":8},{"ruleId":"191","severity":1,"message":"197","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":58,"column":24,"nodeType":"205","messageId":"206","endLine":58,"endColumn":26},{"ruleId":"198","severity":1,"message":"199","line":55,"column":51,"nodeType":"200","messageId":"201","endLine":55,"endColumn":53},{"ruleId":"198","severity":1,"message":"199","line":71,"column":51,"nodeType":"200","messageId":"201","endLine":71,"endColumn":53},{"ruleId":"217","severity":1,"message":"218","line":92,"column":17,"nodeType":"193","messageId":"219","endLine":92,"endColumn":33},{"ruleId":"191","severity":1,"message":"192","line":2,"column":27,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"195","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"196","line":2,"column":42,"nodeType":"193","messageId":"194","endLine":2,"endColumn":46},{"ruleId":"191","severity":1,"message":"197","line":2,"column":48,"nodeType":"193","messageId":"194","endLine":2,"endColumn":56},{"ruleId":"191","severity":1,"message":"202","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":14},{"ruleId":"207","replacedBy":"221"},{"ruleId":"209","replacedBy":"222"},{"ruleId":"191","severity":1,"message":"197","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":18},{"ruleId":"191","severity":1,"message":"223","line":119,"column":13,"nodeType":"193","messageId":"194","endLine":119,"endColumn":23},{"ruleId":"198","severity":1,"message":"224","line":123,"column":43,"nodeType":"200","messageId":"201","endLine":123,"endColumn":45},{"ruleId":"198","severity":1,"message":"224","line":123,"column":74,"nodeType":"200","messageId":"201","endLine":123,"endColumn":76},{"ruleId":"198","severity":1,"message":"224","line":128,"column":238,"nodeType":"200","messageId":"201","endLine":128,"endColumn":240},{"ruleId":"198","severity":1,"message":"199","line":128,"column":269,"nodeType":"200","messageId":"201","endLine":128,"endColumn":271},{"ruleId":"198","severity":1,"message":"199","line":128,"column":329,"nodeType":"200","messageId":"201","endLine":128,"endColumn":331},{"ruleId":"191","severity":1,"message":"192","line":2,"column":27,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"195","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"197","line":2,"column":48,"nodeType":"193","messageId":"194","endLine":2,"endColumn":56},{"ruleId":"191","severity":1,"message":"202","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":14},{"ruleId":"198","severity":1,"message":"199","line":33,"column":37,"nodeType":"200","messageId":"201","endLine":33,"endColumn":39},{"ruleId":"191","severity":1,"message":"225","line":1,"column":28,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"225","line":1,"column":28,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"226","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":77,"column":36,"nodeType":"205","messageId":"206","endLine":77,"endColumn":38},{"ruleId":"203","severity":1,"message":"204","line":35,"column":39,"nodeType":"205","messageId":"206","endLine":35,"endColumn":41},{"ruleId":"203","severity":1,"message":"204","line":39,"column":40,"nodeType":"205","messageId":"206","endLine":39,"endColumn":42},{"ruleId":"203","severity":1,"message":"204","line":55,"column":28,"nodeType":"205","messageId":"206","endLine":55,"endColumn":30},{"ruleId":"203","severity":1,"message":"204","line":80,"column":36,"nodeType":"205","messageId":"206","endLine":80,"endColumn":38},{"ruleId":"191","severity":1,"message":"192","line":2,"column":27,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"195","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"197","line":2,"column":48,"nodeType":"193","messageId":"194","endLine":2,"endColumn":56},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Moment' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["227"],"no-negated-in-lhs",["228"],["227"],["228"],["227"],["228"],["227"],["228"],"no-redeclare","'applicationCards' is already defined.","redeclared","Parsing error: Identifier 'RecEditProfile' has already been declared\n\n  19 | import RecViewAcc from './components/recruiter/recViewAcc'\n  20 | import RecEditProfile from './components/recruiter/recEditProfile'\n> 21 | import RecEditProfile from './components/applicant/appEditProfile'\n     |        ^\n  22 | \n  23 | const Signin = require('./components/auth/signin').default;\n  24 | export default class App extends Component {",["227"],["228"],"'filterJobs' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]