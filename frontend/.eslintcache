[{"/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/index.js":"1","/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/components/recruiter/recJobCardDetails.jsx":"2","/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/components/recruiter/recSeeJobApps.jsx":"3","/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/components/applicant/appViewApplications.jsx":"4","/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/components/applicant/appViewJobs.jsx":"5","/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/components/auth/registerApplicant.jsx":"6","/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/App.jsx":"7","/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/components/applicant/appJobCardDetails.jsx":"8"},{"size":478,"mtime":1611681499215,"results":"9","hashOfConfig":"10"},{"size":2905,"mtime":1611681499214,"results":"11","hashOfConfig":"10"},{"size":5434,"mtime":1611681499214,"results":"12","hashOfConfig":"10"},{"size":1194,"mtime":1611681499212,"results":"13","hashOfConfig":"10"},{"size":8044,"mtime":1611681499213,"results":"14","hashOfConfig":"10"},{"size":7882,"mtime":1611681499213,"results":"15","hashOfConfig":"10"},{"size":5074,"mtime":1611681810032,"results":"16","hashOfConfig":"10"},{"size":5273,"mtime":1611681499212,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uc7a0y",{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/index.js",[],"/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/components/recruiter/recJobCardDetails.jsx",["37","38","39"],"/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/components/recruiter/recSeeJobApps.jsx",["40","41","42","43","44","45","46","47","48","49"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport axios from 'axios';\nimport { Col, Row } from 'react-bootstrap';\nimport ApplicationCard from './ApplicationCard'\n\nexport default class recSeeJobApps extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            applicationList: null,\n            Loading: true,\n        }\n\n        this.onSortRating = this.onSortRating.bind(this);\n        this.onSortName = this.onSortName.bind(this);\n        this.onSortDate = this.onSortDate.bind(this);\n    }\n\n    componentDidMount() {\n        var req = { jobId: this.props.jobId };\n        axios.post('http://localhost:5000/recruiter/getAppsForjobs', req)\n            .then(res => {\n                console.log(res);\n                this.setState({ applicationList: res.data, Loading: false })\n            })\n            .catch(err => {\n                if (err['response']) alert(err.response.data.msg)\n            })\n    }\n\n    onSortRating(e) {\n        e.preventDefault();\n        console.log(e.target.getAttribute('polarity'));\n        const apps = this.state.applicationList;\n        apps.sort(function (a, b) {\n            var aRat = 0\n            var bRat = 0\n            if (!a.applicant['totalRating']) a.applicant['totalRating'] = 0;\n            if (!b.applicant['totalRating']) b.applicant['totalRating'] = 0;\n            if (a.applicant['numRated'] > 0) aRat = a.applicant['totalRating'] / a.applicant['numRated']\n            if (b.applicant['numRated'] > 0) bRat = b.applicant['totalRating'] / b.applicant['numRated']\n\n            return (e.target.getAttribute('polarity')) * (aRat - bRat)\n        })\n        this.setState({ applicationList: apps })\n    }\n\n    onSortName(e) {\n        e.preventDefault();\n        console.log(e.target.getAttribute('polarity'));\n        const apps = this.state.applicationList;\n\n        apps.sort(function (a, b) {\n            console.log(a.applicant.user.name)\n            console.log(b.applicant.user.name)\n            if (e.target.getAttribute('polarity') == 1)\n                return a.applicant.user.name.localeCompare(b.applicant.user.name)\n            else\n                return b.applicant.user.name.localeCompare(a.applicant.user.name)\n        })\n        this.setState({ applicationList: apps })\n    }\n\n    onSortDate(e) {\n        e.preventDefault();\n        console.log(e.target.getAttribute('polarity'));\n        const apps = this.state.applicationList;\n\n        apps.sort(function (a, b) {\n            console.log(a.date)\n            console.log(b.date)\n            if (e.target.getAttribute('polarity') == 1)\n                return new Date(a.date).getTime() - new Date(b.date).getTime()\n            else\n                return new Date(b.date).getTime() - new Date(a.date).getTime()\n        })\n        this.setState({ applicationList: apps })\n    }\n\n    render() {\n        if (this.state.Loading) return (<h1>loading</h1>)\n\n        console.log(this.state.applicationList)\n        if (this.state.applicationList.length !== 0)\n            var applicationCards = this.state.applicationList.map(application =>\n                <div className='card shadow-move-cyan'>\n                    <ApplicationCard application={application} />\n                </div>\n            )\n        else {\n            var applicationCards = <h1>No applications yet</h1>\n        }\n\n        return (\n            < div >\n                <h1>recSeeJobApps</h1>\n                <div className='row'>\n\n                    <div className='col'>\n                        <div className='row'>\n                            <button id='name'  className='btn shadow-move-cyan' polarity={1} onClick={this.onSortName}>sort-by-name asc</button>\n                        </div>\n                        <div className='row'>\n                            <button id='salary'  className='btn shadow-move-cyan' polarity={-1} onClick={this.onSortName}>sort-by-name desc\n                            </button>\n                        </div>\n                    </div>\n\n                    <div className='col'>\n                        <div className='row'>\n                            <button id='rating'  className='btn shadow-move-cyan' polarity={1} onClick={this.onSortRating} >sort-by-rating asc</button>\n                        </div>\n                        <div className='row'>\n                            <button id='rating'  className='btn shadow-move-cyan' polarity={-1} onClick={this.onSortRating} >sort-by-rating desc\n                                </button>\n                        </div>\n                    </div>\n\n                    <div className='col'>\n                        <div className='row'>\n                            <button id='date'  className='btn shadow-move-cyan' polarity={1} onClick={this.onSortDate}> sort-by-date asc</button>\n                        </div>\n                        <div className='row'>\n                            <button id='date' className='btn shadow-move-cyan' polarity={-1} onClick={this.onSortDate}>sort-by-date desc\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <br/>\n                <br/>\n\n                {applicationCards}\n                {/* {JSON.stringify(this.state.applicationList)} */}\n            </div >\n        )\n    }\n}",["50","51"],"/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/components/applicant/appViewApplications.jsx",[],"/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/components/applicant/appViewJobs.jsx",["52","53","54","55","56","57","58","59"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport AppJobCard from './appJobCard'\nimport { Col, Row } from 'react-bootstrap';\n\n\nexport default class AppViewJobs extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: this.props.userEmail,\n            jobList: [],\n            Loading1: true,\n            Loading2: true,\n            search: '',\n            filter: {\n                jobType: 'select',\n                minSalary: -1,\n                maxSalary: 1000000000,\n                maxDuration: 7,\n            },\n            isAccepted: {}\n        }\n        this.onSubmitSearch = this.onSubmitSearch.bind(this);\n        this.onChangeSearch = this.onChangeSearch.bind(this);\n        this.onChangeFilter = this.onChangeFilter.bind(this);\n        this.onSortRating = this.onSortRating.bind(this);\n        this.onSortRating = this.onSortRating.bind(this);\n        this.onSortSalary = this.onSortSalary.bind(this);\n    }\n\n\n    componentDidMount() {\n        axios.post('http://localhost:5000/applicant/viewjobs')\n            .then((res) => {\n                console.log(`${res.data}`);\n                this.setState({\n                    jobList: res.data,\n                    Loading1: false\n                });\n            }).catch(err => console.log(err.response))\n        axios.post('http://localhost:5000/applicant/getAcceptedApp').then(res => {\n            this.setState({\n                isAccepted: res.data,\n                Loading2: false\n            })\n        }).catch(e => {\n            console.log(e);\n            alert(e);\n        })\n    }\n\n    onChangeFilter(e) {\n\n        var tempFil = this.state.filter\n        tempFil[e.target.id] = e.target.value;\n        this.setState({\n            filter: tempFil\n        });\n    }\n\n    onChangeSearch(e) {\n        e.preventDefault();\n        this.setState({ search: e.target.value })\n    }\n\n    onSubmitSearch(e) {\n        e.preventDefault();\n        var req = { search: this.state.search };\n        axios.post('http://localhost:5000/applicant/viewjobs', req)\n            .then((res) => {\n                console.log(`${res.data}`);\n                this.setState({\n                    jobList: res.data,\n                    Loading: false\n                });\n            }).catch(err => console.log(err.response))\n\n    }\n\n\n\n    onSortRating(e) {\n        e.preventDefault();\n        console.log(e.target.getAttribute('polarity'));\n        const jobs = this.state.jobList;\n        jobs.sort(function (a, b) {\n            var aRat = 0\n            var bRat = 0\n            if (!a['totalRating']) a['totalRating'] = 0;\n            if (!b['totalRating']) b['totalRating'] = 0;\n            if (a['numRated'] > 0) aRat = a['totalRating'] / a['numRated']\n            if (b['numRated'] > 0) bRat = b['totalRating'] / b['numRated']\n\n            return (e.target.getAttribute('polarity')) * (aRat - bRat)\n        })\n        this.setState({ jobList: jobs })\n    }\n\n    onSortSalary(e) {\n        e.preventDefault();\n        console.log(e.target.getAttribute('polarity'));\n        const jobs = this.state.jobList;\n        jobs.sort(function (a, b) {\n            return e.target.getAttribute('polarity') * (a['salary'] - b['salary'])\n        })\n        this.setState({ jobList: jobs })\n    }\n\n    render() {\n\n\n        if (this.state.Loading1 || this.state.Loading2)\n            return (<h1>...Loading..</h1>);\n\n        console.log(this.state.jobList)\n\n        var filterJobs = data => {\n            //put some bs here pls\n            if (data['salary'] < this.state.filter.minSalary || data['salary'] > this.state.filter.salary) return false;\n            if (data['duration'] >= this.state.filter.maxDuration) return false;\n            if (this.state.filter.jobType != 'select' && data['jobType'] != this.state.filter.jobType) return false;\n\n            return true;\n        }\n\n        var jobCards = this.state.jobList.filter(data => (data['salary'] >= this.state.filter.minSalary && data['salary'] <= this.state.filter.maxSalary) && data['duration'] < this.state.filter.maxDuration && ((this.state.filter.jobType != 'select' && data['jobType'] == this.state.filter.jobType) || (this.state.filter.jobType == 'select'))).map((job) =>\n            <React.Fragment>\n                <div className='card'>\n                    <AppJobCard job={job} isAccepted={this.state.isAccepted} />\n                </div>\n                <br />\n            </React.Fragment>\n        );\n        console.log();\n\n        return (\n            <div>\n                <div className='row searchrow '>\n                    <div className='col-lg-4'>\n                        <input className=\"form-control\" onChange={this.onChangeSearch} placeholder=\"Search\" id=\"search\" type=\"text\" style={{ width: '100%' }} />\n                    </div>\n                    <div className='col-lg-2'>\n                        <button className='btn w-100 h-100 cyan' onClick={this.onSubmitSearch}>search!</button>\n                    </div>\n                    <div className='col-lg-3'>\n                        <div className='row'>\n                            <button id='salary' className='btn btn1 cyan' style={{}} polarity={1} onClick={this.onSortSalary}>sort-by-salary asc</button>\n                        </div>\n                        <div className='row'>\n                            <button id='salary' className='btn red' style={{}} polarity={-1} onClick={this.onSortSalary}> sort-by-salary desc\n                            </button>\n                        </div>\n                    </div>\n\n                    <div className='col-lg-3'>\n                        <div className='row'>\n                            <button id='rating' className='btn cyan' polarity={1} onClick={this.onSortRating} >sort-by-rating asc</button>\n                        </div>\n                        <div className='row'>\n                            <button id='rating' className='btn red' polarity={-1} onClick={this.onSortRating} >sort-by-rating desc\n                                </button>\n                        </div>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-lg-1'>\n                        filters:\n                    </div>\n\n                    <div className='col-lg-2'>\n                        job type:\n                    </div>\n                    <div className='col-lg-2'>\n                        <select className=\"form-control\" onChange={this.onChangeFilter} id='jobType' >\n                            <option value=\"select\" selected>select\n                            </option>\n                            <option value=\"Full-time\" >Full-time</option>\n                            <option value=\"Part-time\">Part-time</option>\n                            <option value=\"Work-from-home\">Work from home</option>\n                        </select>\n                    </div>\n                    <div className='col-lg-2'>\n                        salary range:\n                    </div>\n\n                    <div className='col-lg-2'>\n                        <div className='row'>\n                            <input type='number' id='minSalary' value={this.state.filter.minSalary} style={{ width: '100%' }} onChange={this.onChangeFilter} />\n                        </div>\n                        <div className='row'>\n                            <input type='number' id='maxSalary' value={this.state.filter.maxSalary} style={{ width: '100%' }} onChange={this.onChangeFilter} />\n                        </div>\n                    </div>\n                    <div className='col-lg-2'>\n                        max Duration:\n                    </div>\n                    <div className='col-lg-1'>\n                        <input type='number' id='maxDuration' value={this.state.filter.maxDuration} style={{ width: '100%' }} onChange={this.onChangeFilter} />\n                </div>\n            </div>\n        <h1>wow</h1>\n        { jobCards }\n            </div >\n        )\n    }\n}","/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/components/auth/registerApplicant.jsx",["60","61","62"],"/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/App.jsx",["63"],"/Users/saru/dass/ass1/linkedin-lite-mern/frontend/src/components/applicant/appJobCardDetails.jsx",["64"],{"ruleId":"65","severity":1,"message":"66","line":2,"column":27,"nodeType":"67","messageId":"68","endLine":2,"endColumn":33},{"ruleId":"65","severity":1,"message":"69","line":2,"column":35,"nodeType":"67","messageId":"68","endLine":2,"endColumn":40},{"ruleId":"65","severity":1,"message":"70","line":2,"column":48,"nodeType":"67","messageId":"68","endLine":2,"endColumn":56},{"ruleId":"65","severity":1,"message":"66","line":2,"column":27,"nodeType":"67","messageId":"68","endLine":2,"endColumn":33},{"ruleId":"65","severity":1,"message":"69","line":2,"column":35,"nodeType":"67","messageId":"68","endLine":2,"endColumn":40},{"ruleId":"65","severity":1,"message":"71","line":2,"column":42,"nodeType":"67","messageId":"68","endLine":2,"endColumn":46},{"ruleId":"65","severity":1,"message":"70","line":2,"column":48,"nodeType":"67","messageId":"68","endLine":2,"endColumn":56},{"ruleId":"65","severity":1,"message":"72","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"73","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":13},{"ruleId":"65","severity":1,"message":"74","line":5,"column":15,"nodeType":"67","messageId":"68","endLine":5,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":58,"column":51,"nodeType":"77","messageId":"78","endLine":58,"endColumn":53},{"ruleId":"75","severity":1,"message":"76","line":74,"column":51,"nodeType":"77","messageId":"78","endLine":74,"endColumn":53},{"ruleId":"79","severity":1,"message":"80","line":93,"column":17,"nodeType":"67","messageId":"81","endLine":93,"endColumn":33},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"65","severity":1,"message":"73","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":13},{"ruleId":"65","severity":1,"message":"74","line":4,"column":15,"nodeType":"67","messageId":"68","endLine":4,"endColumn":18},{"ruleId":"65","severity":1,"message":"86","line":119,"column":13,"nodeType":"67","messageId":"68","endLine":119,"endColumn":23},{"ruleId":"75","severity":1,"message":"87","line":123,"column":43,"nodeType":"77","messageId":"78","endLine":123,"endColumn":45},{"ruleId":"75","severity":1,"message":"87","line":123,"column":74,"nodeType":"77","messageId":"78","endLine":123,"endColumn":76},{"ruleId":"75","severity":1,"message":"87","line":128,"column":238,"nodeType":"77","messageId":"78","endLine":128,"endColumn":240},{"ruleId":"75","severity":1,"message":"76","line":128,"column":269,"nodeType":"77","messageId":"78","endLine":128,"endColumn":271},{"ruleId":"75","severity":1,"message":"76","line":128,"column":329,"nodeType":"77","messageId":"78","endLine":128,"endColumn":331},{"ruleId":"65","severity":1,"message":"88","line":1,"column":28,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"89","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":87,"column":36,"nodeType":"92","messageId":"93","endLine":87,"endColumn":38},{"ruleId":null,"fatal":true,"severity":2,"message":"94","line":94,"column":41},{"ruleId":"79","severity":1,"message":"95","line":107,"column":18,"nodeType":"67","messageId":"81","endLine":107,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'Moment' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'applicationCards' is already defined.","redeclared","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"'filterJobs' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'render' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Parsing error: Expected corresponding JSX closing tag for <div>\n\n  92 |         <NavBar isLoggedIn={this.state.isLoggedIn} userType={this.state.userType} />\n  93 |         <div style={{ marginLeft: '5%', marginRight: '20%' }}>\n> 94 |           <div>Hi {this.state.userEmail}</h1>\n     |                                         ^\n  95 | \n  96 |           <Route exact path='/test' component={Test} />\n  97 |           <Route exact path='/register' component={Register} />","'i' is already defined.","no-global-assign","no-unsafe-negation"]